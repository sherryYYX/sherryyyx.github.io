<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 小王子的博客</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on 小王子的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 16 Apr 2020 20:18:45 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>computed 和 watch 的区别</title>
      <link>http://localhost:1313/post/23st/</link>
      <pubDate>Thu, 16 Apr 2020 20:18:45 +0800</pubDate>
      
      <guid>http://localhost:1313/post/23st/</guid>
      <description>computed 和 watch 的区别 一、 computed 是用来计算属性 watch 是用来监听 二、 （一）computed computed是用来计算一个值，如果调用它，不需要加括号 computed 会根据依赖</description>
    </item>
    
    <item>
      <title>浅析 Vue 数据响应式</title>
      <link>http://localhost:1313/post/22st/</link>
      <pubDate>Wed, 15 Apr 2020 14:55:14 +0800</pubDate>
      
      <guid>http://localhost:1313/post/22st/</guid>
      <description>一、什么是响应式 一个物体受到外界的刺激，做出相应反应，就是响应式。 二、Vue 的 data 是响应式的 const vm = new Vue({ data:{n:0} }) 如果修改vm.n,那么UI中的n就会</description>
    </item>
    
    <item>
      <title>Vue 构造选项(一)</title>
      <link>http://localhost:1313/post/21st/</link>
      <pubDate>Tue, 14 Apr 2020 20:38:42 +0800</pubDate>
      
      <guid>http://localhost:1313/post/21st/</guid>
      <description>一、Vue实例 总结 把 Vue 的实例命名为vm是尤雨溪的习惯，我们应该沿用 vm 对象封装了对视图的所有操作，包括数据读写、事件绑定、DOM更新 vm 的构造函</description>
    </item>
    
    <item>
      <title>浅析 JS 的继承</title>
      <link>http://localhost:1313/post/20st/</link>
      <pubDate>Mon, 13 Apr 2020 23:04:18 +0800</pubDate>
      
      <guid>http://localhost:1313/post/20st/</guid>
      <description>一、原型的继承 function superType(name){ this.name = name; } superType.prototype.sayName = function(){ console.log(this.name) } function subType(name,age){ // 继承属性 superType.call(this,name); this.age = age; } // 继承方法 subType.prototype = new superType(); subType.prototype.sayAge = function(){ console.log(this.age) } // subType 实例 同时拥有 name，age属性，sayName</description>
    </item>
    
    <item>
      <title>浅析 Vue 两个版本的区别和使用方法</title>
      <link>http://localhost:1313/post/nineteenth/</link>
      <pubDate>Mon, 13 Apr 2020 17:05:14 +0800</pubDate>
      
      <guid>http://localhost:1313/post/nineteenth/</guid>
      <description>一、两个版本对应的文件名 二、template 和 render 怎么用 Vue 完整版 &amp;lt;template&amp;gt;的使用方法，写在 html页面里或者js里 &amp;lt;template&amp;gt; &amp;lt;div id=&amp;quot;app&amp;quot;&amp;gt;</description>
    </item>
    
    <item>
      <title>webpack</title>
      <link>http://localhost:1313/post/eighteenth/</link>
      <pubDate>Sun, 12 Apr 2020 22:24:01 +0800</pubDate>
      
      <guid>http://localhost:1313/post/eighteenth/</guid>
      <description>webpack webpack 中的 loader 和 plugin 区别是什么？ 一、 loader 是加载器 plugin 是插件 二、用途 加载器用来加载文件 例如： babel loader用来加载高级js，将其变成低版本支持的js。 css</description>
    </item>
    
    <item>
      <title>闭包</title>
      <link>http://localhost:1313/post/seventeenh/</link>
      <pubDate>Sat, 11 Apr 2020 23:03:08 +0800</pubDate>
      
      <guid>http://localhost:1313/post/seventeenh/</guid>
      <description>一、闭包是：一个函数用到了外部变量，那么函数+变量就是闭包。 function f1() { let a = 1; function f2() { console.log(a) } f2() } f1() //其中的变量a和函数f2就是闭包 二、闭包的用途是</description>
    </item>
    
    <item>
      <title>浅析 MVC</title>
      <link>http://localhost:1313/post/sixteenth/</link>
      <pubDate>Sat, 11 Apr 2020 16:31:55 +0800</pubDate>
      
      <guid>http://localhost:1313/post/sixteenth/</guid>
      <description>1. MVC 三个对象分别做什么 每个模块都可以写成三个对象，分别是 M —— Model 数据类型 负责操作所有数据 V —— View 视图 负责所有UI界面 C —— Controller 控制器 负责其他 代</description>
    </item>
    
    <item>
      <title>jQuery 的功能</title>
      <link>http://localhost:1313/post/fourteenth/</link>
      <pubDate>Sat, 28 Mar 2020 19:13:11 +0800</pubDate>
      
      <guid>http://localhost:1313/post/fourteenth/</guid>
      <description>一、jQuery 如何获取元素 jQuery的第一步，就是将选择表达式，放进构造函数jQuery()(简写为$) $(document)//选择整</description>
    </item>
    
    <item>
      <title>* HTML 总结</title>
      <link>http://localhost:1313/post/thirteenth/</link>
      <pubDate>Sun, 22 Mar 2020 16:44:11 +0800</pubDate>
      
      <guid>http://localhost:1313/post/thirteenth/</guid>
      <description>canvas const canvas = document.getElementById(&#39;canvas&#39;); //获取canvas的引用 const ctx = canvas.getContext(&#39;2d&#39;); //获取canvas 2d 上下文 ctx.fillStyle = &#39;green&#39;; // 设置画笔颜色 ctx.fillRect(10, 10, 150, 100); //设置画笔范围（坐标，宽高） video &amp;lt;!-- Simple video example</description>
    </item>
    
    <item>
      <title>JS 函数的执行时机</title>
      <link>http://localhost:1313/post/twelfth/</link>
      <pubDate>Fri, 20 Mar 2020 20:17:59 +0800</pubDate>
      
      <guid>http://localhost:1313/post/twelfth/</guid>
      <description>let i = 0 for(i = 0; i&amp;lt;6; i++){ setTimeout(()=&amp;gt;{ console.log(i) },0) } //打印出6个6 解释 i是全局变量 for循环遍历i 而每次循环里都有setTimeout() setTimeout()里</description>
    </item>
    
    <item>
      <title>JS 对象基本用法</title>
      <link>http://localhost:1313/post/11st/</link>
      <pubDate>Tue, 17 Mar 2020 19:36:03 +0800</pubDate>
      
      <guid>http://localhost:1313/post/11st/</guid>
      <description>JavaScript 对象（Object） 写法 简单写法 let obj = { &amp;quot;name&amp;quot;:&amp;quot;frank&amp;quot;,&amp;quot;age&amp;quot;:18 } let obj = new Object({&amp;quot;name&amp;quot;:&amp;quot;frank&amp;quot;}) //正规写法 注意 键名是字符串，不是标识符，可以包含任意字符 数字的时候，引号可省 就算引</description>
    </item>
    
    <item>
      <title>JS 的基本语法</title>
      <link>http://localhost:1313/post/tenth/</link>
      <pubDate>Mon, 16 Mar 2020 19:45:21 +0800</pubDate>
      
      <guid>http://localhost:1313/post/tenth/</guid>
      <description>1.表达式和语句 表达式 1 + 2 表达式的值为3 add(1,2)表达式的值为函数的返回值 语句 var a = 1是一个语句 区别 表达式一般有值，语句可能有可能无</description>
    </item>
    
    <item>
      <title>JavaScript 的诞生</title>
      <link>http://localhost:1313/post/ninth/</link>
      <pubDate>Sat, 14 Mar 2020 23:07:56 +0800</pubDate>
      
      <guid>http://localhost:1313/post/ninth/</guid>
      <description>布兰登艾 JavaScript之父 1. 1995年布兰登为了应付网景公司交给他的任务，这项任务就是，公司急需一种网页脚本语言，让浏览器可以与网页互</description>
    </item>
    
    <item>
      <title>浅析 URL</title>
      <link>http://localhost:1313/post/eighth/</link>
      <pubDate>Sat, 14 Mar 2020 09:57:23 +0800</pubDate>
      
      <guid>http://localhost:1313/post/eighth/</guid>
      <description>www = URL + HTTP + HTML IP（Internet Protocol）网络协议 定位一台设备 特殊的IP 127.0.0.1 表示自己 localhost 通过host指定自己 端口（port） 提供HT</description>
    </item>
    
    <item>
      <title>CSS 知识总结</title>
      <link>http://localhost:1313/post/seventh/</link>
      <pubDate>Fri, 13 Mar 2020 17:23:51 +0800</pubDate>
      
      <guid>http://localhost:1313/post/seventh/</guid>
      <description>css布局 1.float布局 子元素上加 float:left和width 在父元素上加.clearfix .clearfix::after{ content:&#39;&#39;; display:block; clear:both; } 注意 float要自己计算宽度，</description>
    </item>
    
    <item>
      <title>简述 CSS 盒模型是什么</title>
      <link>http://localhost:1313/post/sixth/</link>
      <pubDate>Wed, 11 Mar 2020 20:43:16 +0800</pubDate>
      
      <guid>http://localhost:1313/post/sixth/</guid>
      <description>简述 CSS 盒模型是什么 css盒模型分为两种 content box boder box 一个盒子由四部分组成 content 内容 padding 内边距 boder 边框 margin 外边距</description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://localhost:1313/post/fifth/</link>
      <pubDate>Tue, 10 Mar 2020 20:08:39 +0800</pubDate>
      
      <guid>http://localhost:1313/post/fifth/</guid>
      <description>a 标签的用法 &amp;lt;a href=&amp;quot;//google.com&amp;quot;&amp;gt;超链接&amp;lt;/a&amp;gt; 属性 href 取值有网址、路径、伪协议 作用</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>http://localhost:1313/post/fourth/</link>
      <pubDate>Tue, 10 Mar 2020 15:16:07 +0800</pubDate>
      
      <guid>http://localhost:1313/post/fourth/</guid>
      <description>HTML 1.HTML 是谁发明的 李爵士 2.HTML 起手应该写什么 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 3.常用的表章节的标签有哪些，分别是什么意思（h1~h6、section</description>
    </item>
    
    <item>
      <title>第三篇文章</title>
      <link>http://localhost:1313/post/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/</link>
      <pubDate>Tue, 10 Mar 2020 13:52:40 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/</guid>
      <description>如何用 hugo 搭建个人博客 Mac 用户 安装hugo brew install hugo hugo version 创建新的环境 hugo new site xxx.github.io-creator 添加主题 cd xxx.github.io-creator git init xxxxxxxxx //主题下载地址 设置主题名 echo echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml 新建文章 hugo new post/my</description>
    </item>
    
  </channel>
</rss>